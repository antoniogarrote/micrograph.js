(function(){var k={PriorityQueue:function(a){var b=[],c={},d=!1,e,g=a.maxSize||10;e=function(a,b){return c[b].priority-c[a].priority};var h=function(){b.sort(e);d=!0};return{debugContents:b,debugStore:c,debugSort:h,push:function(a,e){if(b.length===g){d||h();if(c[a]==null){delete c[b[0]];b[0]=a;var f=c[b[b.length-1]].priority-1;c[a]={object:e,priority:f}}else f=c[b[b.length-1]].priority-1,c[a].priority=f;d=!1}else b.length===0?(b.push(a),c[a]={object:e,priority:1E3}):(f=c[b[b.length-1]].priority-1,
c[a]==null?(c[a]={object:e,priority:f},b.push(a)):(c[a].priority=f,d=!1))},remove:function(a){if(c[a]!=null){delete c[a];for(var d=null,e=0;e<b.length;e++)if(b[e]===a){d=e;break}d!=null&&b.splice(d,1)}},fetch:function(a){var e=c[a];return c[a]!=null?(d||h(),c[a].priority=c[b[b.length-1]].priority-1,d=!1,e.object):null}}}},f={};f.Tree=function(a,b,c,d){if(arguments.length!=0){var e=null;if(c===!0)try{if(e=window.localStorage,e==null)throw"not found";}catch(g){throw"Local storage is not present, cannot create persistent storage";
}e==null&&(e=function(){var a={};return{setItem:function(b,c){a[b]=c},getItem:function(b){return a[b]||null},removeItem:function(b){delete a[b]},get:function(b){var c=0,d;for(d in a){if(b===c)return d;c++}return""},length:a.length}}());this.storage=e;this.order=a;this.name=b;this.diskManager=new f.LocalStorageManager(b,e,d);this.root=this.diskManager._readRootNode();this.root==null?(this.root=this._allocateNode(),this.root.isLeaf=!0,this.root.level=0,this._diskWrite(this.root),this._updateRootNode(this.root),
this.root=this.root.pointer):this.root=this.diskManager._diskRead(this.root).pointer;this.comparator=function(a,b){return a<b?-1:a>b?1:0};this.merger=null}};f.Tree.prototype._allocateNode=function(){return new f.Node};f.Tree.prototype._diskWrite=function(a){this.diskManager._diskWrite(a)};f.Tree.prototype._diskRead=function(a){return this.diskManager._diskRead(a)};f.Tree.prototype._diskDelete=function(a){this.diskManager._diskDelete(a)};f.Tree.prototype._updateRootNode=function(a){this.diskManager._updateRootNode(a);
return a};f.Tree.prototype.search=function(a,b){for(var c=!0,d=this._diskRead(this.root);c;){for(var e=0;e<d.numberActives&&this.comparator(a,d.keys[e].key)===1;)e++;if(e<d.numberActives&&this.comparator(d.keys[e].key,a)===0)return b!=null&&b==!0?!0:d.keys[e].data;else d.isLeaf===!0?c=!1:d=this._diskRead(d.children[e])}return null};f.Tree.prototype.walk=function(a){this._walk(a,this._diskRead(this.root))};f.Tree.prototype._walk=function(a,b){if(b.isLeaf)for(var c=0;c<b.numberActives;c++)a(b.keys[c]);
else{for(c=0;c<b.numberActives;c++)this._walk(a,this._diskRead(b.children[c])),a(b.keys[c]);this._walk(a,this._diskRead(b.children[b.numberActives]))}};f.Tree.prototype.walkNodes=function(a){this._walkNodes(a,this._diskRead(this.root))};f.Tree.prototype._walkNodes=function(a,b){if(b.isLeaf)a(b);else{a(b);for(var c=0;c<b.numberActives;c++)this._walkNodes(a,this._diskRead(b.children[c]));this._walkNodes(a,this._diskRead(b.children[b.numberActives]))}};f.Tree.prototype._splitChild=function(a,b,c){var d=
this._allocateNode();d.isLeaf=c.isLeaf;d.level=c.level;d.numberActives=this.order-1;var e=c.keys[this.order-1];c.keys[this.order-1]=null;for(var g=0;g<this.order-1;g++)d.keys[g]=c.keys[g+this.order],c.keys[g+this.order]=null,c.isLeaf||(d.children[g]=c.children[g+this.order],c.children[g+this.order]=null);c.isLeaf||(d.children[g]=c.children[g+this.order],c.children[g+this.order]=null);c.numberActives=this.order-1;for(g=a.numberActives+1;g>b+1;g--)a.children[g]=a.children[g-1];this._diskWrite(d);a.children[b+
1]=d.pointer;for(g=a.numberActives;g>b;g--)a.keys[g]=a.keys[g-1];a.keys[b]=e;a.numberActives++;this._diskWrite(a);this._diskWrite(c)};f.Tree.prototype.insert=function(a,b){var c=this._diskRead(this.root);if(c.numberActives===2*this.order-1){var d=this._allocateNode();d.isLeaf=!1;d.level=c.level+1;d.numberActives=0;d.children[0]=c.pointer;this._diskWrite(d);this._splitChild(d,0,c);this.root=d.pointer;this._updateRootNode(d);this._insertNonFull(d,a,b)}else this._insertNonFull(c,a,b)};f.Tree.prototype._insertNonFull=
function(a,b,c){for(var d=a.numberActives-1;!a.isLeaf;){for(;d>=0&&this.comparator(b,a.keys[d].key)===-1;)d--;d++;var e=this._diskRead(a.children[d]);e.numberActives===2*this.order-1&&(this._splitChild(a,d,e),this.comparator(b,a.keys[d].key)===1&&d++);a=this._diskRead(a.children[d]);d=a.numberActives-1}for(;d>=0&&this.comparator(b,a.keys[d].key)===-1;)a.keys[d+1]=a.keys[d],d--;a.keys[d+1]={key:b,data:c};a.numberActives++;this._diskWrite(a)};f.Tree.prototype["delete"]=function(a){for(var b=this._diskRead(this.root),
c=null,d=!0,e=null,g=null,h=null,l=!0;l===!0;){for(l=!1;d===!0;){j=0;if(b.numberActives===0)return!1;for(;j<b.numberActives&&this.comparator(a,b.keys[j].key)===1;)j++;e=j;j<b.numberActives&&this.comparator(a,b.keys[j].key)===0&&(d=!1);if(d===!0){if(b.isLeaf===!0)return!1;c=b;b=this._diskRead(b.children[j]);if(b===null)return!1;e===c.numberActives?(g=this._diskRead(c.children[e-1]),h=null):e===0?(g=null,h=this._diskRead(c.children[1])):(g=this._diskRead(c.children[e-1]),h=this._diskRead(c.children[e+
1]));b.numberActives===this.order-1&&c!=null&&(h!=null&&h.numberActives>this.order-1?(this._moveKey(c,j,-1),b=this._diskRead(b.pointer)):g!=null&&g.numberActives>this.order-1?(this._moveKey(c,j,1),b=this._diskRead(b.pointer)):g!=null&&g.numberActives===this.order-1?b=this._mergeSiblings(c,j,-1):h!=null&&h.numberActives===this.order-1&&(b=this._mergeSiblings(c,j,1)))}}if(b.isLeaf&&b.numberActives>this.order-1)return this._deleteKeyFromNode(b,e),!0;if(b.isLeaf&&b.pointer===this.root)return this._deleteKeyFromNode(b,
e),!0;try{if(b.isLeaf===!1)if(g=c=null,(c=this._diskRead(b.children[e])).numberActives>this.order-1){var f=this._getMaxKeyPos(c),a=f.node.keys[f.index];b.keys[e]=a;this._diskWrite(b);b=c;a=a.key;d=l=!0}else if((c=this._diskRead(b.children[e+1])).numberActives>this.order-1)f=this._getMinKeyPos(c),a=f.node.keys[f.index],b.keys[e]=a,this._diskWrite(b),b=c,a=a.key,d=l=!0;else if((c=this._diskRead(b.children[e])).numberActives===this.order-1&&(g=this._diskRead(b.children[e+1])).numberActives===this.order-
1){var i=this._mergeNodes(c,b.keys[e],g);b.children[e]=i.pointer;e++;for(var j=e;j<b.numberActives;j++)b.children[j]=b.children[j+1],b.keys[j-1]=b.keys[j];b.children[j]=null;b.keys[j-1]=null;b.numberActives--;if(b.numberActives===0&&this.root===b.pointer)this.root=i.pointer,this._updateRootNode(i);this._diskWrite(b);b=i;d=l=!0}}catch(k){console.log("!!!"),console.log(k)}b.isLeaf&&b.numberActives>this.order-1&&d===!1&&this._deleteKeyFromNode(b,e);if(l===!1)return!0}};f.Tree.prototype._moveKey=function(a,
b,c){c===1&&b--;var d=this._diskRead(a.children[b]),e=this._diskRead(a.children[b+1]);if(c==-1){d.keys[d.numberActives]=a.keys[b];d.children[d.numberActives+1]=e.children[0];e.children[0]=null;d.numberActives++;a.keys[b]=e.keys[0];for(c=1;c<e.numberActives;c++)e.keys[c-1]=e.keys[c],e.children[c-1]=e.children[c];e.children[e.numberActives-1]=e.children[e.numberActives];e.numberActives--}else{e.children[e.numberActives+1]=e.children[e.numberActives];for(c=e.numberActives;c>0;c--)e.children[c]=e.children[c-
1],e.keys[c]=e.keys[c-1];e.keys[0]=null;e.children[0]=null;e.children[0]=d.children[d.numberActives];e.keys[0]=a.keys[b];e.numberActives++;d.children[d.numberActives]=null;a.keys[b]=d.keys[d.numberActives-1];d.keys[d.numberActives-1]=null;d.numberActives--}this._diskWrite(d);this._diskWrite(e);this._diskWrite(a)};f.Tree.prototype._mergeSiblings=function(a,b){var c,d,e;b===a.numberActives?(b--,d=this._diskRead(a.children[a.numberActives-1]),e=this._diskRead(a.children[a.numberActives])):(d=this._diskRead(a.children[b]),
e=this._diskRead(a.children[b+1]));var g=this._allocateNode();g.isLeaf=d.isLeaf;g.level=d.level;for(c=0;c<this.order-1;c++)g.keys[c]=d.keys[c],g.children[c]=d.children[c];g.keys[this.order-1]=a.keys[b];g.children[this.order-1]=d.children[this.order-1];for(c=0;c<this.order-1;c++)g.keys[c+this.order]=e.keys[c],g.children[c+this.order]=e.children[c];g.children[2*this.order-1]=e.children[this.order-1];this._diskWrite(g);a.children[b]=g.pointer;for(c=b;c<a.numberActives;c++)a.keys[c]=a.keys[c+1],a.children[c+
1]=a.children[c+2];g.numberActives=d.numberActives+e.numberActives+1;a.numberActives--;for(c=a.numberActives;c<2*this.order-1;c++)a.keys[c]=null;if(a.numberActives===0&&this.root===a.pointer)this.root=g.pointer,g.isLeaf=g.level?!1:!0;this._diskWrite(g);this.root===g.pointer&&this._updateRootNode(g);this._diskWrite(a);this._diskDelete(d);this._diskDelete(e);return g};f.Tree.prototype._deleteKeyFromNode=function(a,b){var c=2*this.order-1;if(a.numberActives<c)c=a.numberActives;var d;if(a.isLeaf===!1)return!1;
for(d=b;d<c-1;d++)a.keys[d]=a.keys[d+1];a.keys.splice(c-1,a.keys.length-(c-1));a.numberActives--;this._diskWrite(a);return!0};f.Tree.prototype._mergeNodes=function(a,b,c){var d,e;d=this._allocateNode();d.isLeaf=!0;for(e=0;e<a.numberActives;e++)d.keys[e]=a.keys[e],d.children[e]=a.children[e];d.children[a.numberActives]=a.children[a.numberActives];d.keys[a.numberActives]=b;for(e=0;e<c.numberActives;e++)d.keys[e+a.numberActives+1]=c.keys[e],d.children[e+a.numberActives+1]=c.children[e];d.children[2*
this.order-1]=c.children[c.numberActives];d.numberActives=a.numberActives+c.numberActives+1;d.isLeaf=a.isLeaf;d.level=a.level;this._diskWrite(d);this._diskDelete(a);this._diskDelete(c);return d};f.Tree.prototype.audit=function(a){var b=[],c=[],d=this,e=function(e){for(var g=0;g<c.length;g++)if(d.comparator(c[g],e)===0){var f=" !!! duplicated key "+e;a===!0&&console.log(f);b.push(f)}},g=null,d=this;this.walkNodes(function(h){a===!0&&(console.log("--- Node at "+h.level+" level"),console.log(" - pointer: "+
h.pointer),console.log(" - leaf? "+h.isLeaf),console.log(" - num actives? "+h.numberActives),console.log(" - keys: "));for(var f=h.numberActives;f<h.keys.length;f++)h.keys[f]!=null&&a===!0&&(console.log(" * warning : redundant key data"),b.push(" * warning : redundant key data"));for(f=h.numberActives+1;f<h.children.length;f++)h.children[f]!=null&&a===!0&&(console.log(" * warning : redundant children data"),b.push(" * warning : redundant key data"));if(h.isLeaf===!1)for(f=0;f<h.numberActives;f++){var i=
d._diskRead(h.children[f]).keys[d._diskRead(h.children[f]).numberActives-1].key,k=d._diskRead(h.children[f+1]).keys[0].key;a===!0&&console.log("   "+h.keys[f].key+"("+i+","+k+")");if(d.comparator(h.keys[f].key,i)===-1){var j=" !!! value max left "+i+" > key "+h.keys[f].key;a===!0&&console.log(j);b.push(j)}d.comparator(h.keys[f].key,k)===1&&(j=" !!! value min right "+k+" < key "+h.keys[f].key,a===!0&&console.log(j),b.push(j));e(h.keys[f].key);c.push(h.keys[f].key)}else{g===null?g=h.level:g!=h.level&&
(j=" !!! Leaf node with wrong level value",a===!0&&console.log(j),b.push(j));for(f=0;f<h.numberActives;f++)a===!0&&console.log(" "+h.keys[f].key),e(h.keys[f].key),c.push(h.keys[f].key)}h.pointer!=d.root&&(h.numberActives>2*d.order-1&&(a===!0&&(j=" !!!! MAX num keys restriction violated "),console.log(j),b.push(j)),h.numberActives<d.order-1&&(a===!0&&(j=" !!!! MIN num keys restriction violated "),console.log(j),b.push(j)))});return b};f.Tree.prototype.clear=function(){this.diskManager.clear();this.root=
this._allocateNode();this.root.isLeaf=!0;this.root.level=0;this._diskWrite(this.root);this._updateRootNode(this.root);this.root=this.root.pointer};f.Tree.prototype._getMaxKeyPos=function(a){for(var b={};;){if(a===null)break;if(a.isLeaf===!0){b.node=a;b.index=a.numberActives-1;break}else b.node=a,b.index=a.numberActives-1,a=this._diskRead(a.children[a.numberActives])}return b};f.Tree.prototype._getMinKeyPos=function(a){for(var b={};;){if(a===null)break;if(a.isLeaf===!0){b.node=a;b.index=0;break}else b.node=
a,b.index=0,a=this._diskRead(a.children[0])}return b};f.Node=function(){this.numberActives=0;this.isLeaf=null;this.keys=[];this.children=[];this.level=0};f.LocalStorageManager=function(a,b,c){this.name=a;this.storage=b;this.maxSize=c;this.bufferCache=new k.PriorityQueue({maxSize:c});this.counter=this.storage.getItem("__"+this.name+"__ID_COUNTER__")||0};f.LocalStorageManager.prototype.clear=function(){for(var a=this.storage.length,b=[],c=0;c<a;c++){var d=this.storage.key(c);(d.indexOf(this.name)==
0||d.indexOf("__"+this.name)==0)&&b.push(d)}for(c=0;c<b.length;c++)this.storage.removeItem(b[c]);this.bufferCache=new k.PriorityQueue({maxSize:this.maxSize})};f.LocalStorageManager.prototype._genIndex=function(){var a=this.name+this.counter;this.counter++;this.storage.setItem("__"+this.name+"__ID_COUNTER__",this.counter);return a};f.LocalStorageManager.prototype._diskRead=function(a){if(typeof a==="object")a=a.pointer;var b=this.bufferCache.fetch(a);if(b==null&&(b=this.storage.getItem(a),b!=null))b=
this._decode(b),b.pointer=a,this.bufferCache.push(a,b);return b};f.LocalStorageManager.prototype._diskWrite=function(a){if(a.pointer==null)a.pointer=this._genIndex();var b=a.children,c=[];if(a.isLeaf===!1)for(var d=0;d<b.length;d++)b[d]==null?c.push(null):typeof b[d]==="object"?c.push(b[d].pointer):c.push(b[d]);a.children=c;this.storage.setItem(a.pointer,this._encode(a));a.children=b;this.bufferCache.push(a.pointer,a)};f.LocalStorageManager.prototype._diskDelete=function(a){this.storage.removeItem(a.pointer);
this.bufferCache.remove(a.pointer)};f.LocalStorageManager.prototype._updateRootNode=function(a){if(a.pointer)this.storage.setItem("__"+this.name+"__ROOT_NODE__",a.pointer);else throw"Cannot set as root of the b-tree a node without pointer";};f.LocalStorageManager.prototype._readRootNode=function(){var a=this.storage.getItem("__"+this.name+"__ROOT_NODE__");return a==null?null:this._diskRead(a)};f.LocalStorageManager.prototype._encode=function(a){for(var b=""+a.numberActives,b=b+":"+a.pointer,b=b+":"+
a.level,b=b+":"+(a.isLeaf?1:0),c=0,d="",e=0;e<a.keys.length;e++)a.keys[e]!=null&&(d=typeof a.keys[e].key==="number"?d+":"+a.keys[e].key:d+":"+("_"+(a.keys[e].key.subject||"")+"_"+(a.keys[e].key.predicate||"")+"_"+(a.keys[e].key.object||"")+"_"+(a.keys[e].key.graph||"")),a.keys[e].data==null?d+=":n:":d=typeof a.keys[e].data=="string"?d+":s:"+a.keys[e].data:typeof a.keys[e].data=="number"?a.keys[e]%1==0?d+":i:"+a.keys[e].data:d+":f:"+a.keys[e].data:d+":o:"+JSON.stringify(a.keys[e].data).replace(":",
"&colon;"),c++);b=b+":"+c+d;if(a.isLeaf===!1){c="";for(e=d=0;e<a.children.length;e++)a.children[e]!=null&&(c=c+":"+a.children[e],d++);b=b+":"+d+c}return b};f.LocalStorageManager.prototype._decode=function(a){var b=new f.Node,a=a.split(":");b.numberActives=parseInt(a[0]);b.pointer=a[1];b.level=parseInt(a[2]);b.isLeaf=a[3]==="1"?!0:!1;for(var c=parseInt(a[4]),d=5,e,g,h,i=0;i<c;i++)e=a[d],e[0]=="_"?(e=e.split("_"),e={subject:parseInt(e[1])||null,predicate:parseInt(e[2])||null,object:parseInt(e[3])||
null,graph:parseInt(e[4]||null)}):e=parseInt(a[d]),g=a[d+1],h=a[d+2],g==="n"?h=void 0:g==="i"?h=parseInt(h):g==="f"?h=parseFloat(h):g==="o"&&(h=JSON.parse(h.replace("&colon;",":"))),b.keys.push({key:e,data:h}),d+=3;if(b.isLeaf===!1){c=parseInt(a[d]);d++;for(i=0;i<c;i++)b.children[i]=a[d],d++}return b};var i={Lexicon:function(a,b){this.name=b||"";this.storage=null;try{this.storage=window.localStorage}catch(c){}if(this.storage==null)this.storage={setItem:function(){},getItem:function(){return null},
removeItem:function(){},key:function(){return""},length:0};this.uriToOID={};this.OIDToUri={};this.literalToOID={};this.OIDToLiteral={};this.blankToOID={};this.OIDToBlank={};this.defaultGraphOid=0;this.defaultGraphUri="https://github.com/antoniogarrote/rdfstore-js#default_graph";this.defaultGraphUriTerm={token:"uri",prefix:null,suffix:null,value:this.defaultGraphUri,oid:this.defaultGraphOid};this.oidCounter=parseInt(this.storage.getItem(this.pointer("oidCounter")))||1;this.storage.getItem(this.pointer("knownGraphs"))==
null?(this.knownGraphs={},this.storage.setItem(this.pointer("knownGraphs"),JSON.stringify(this.knownGraphs))):this.knownGraphs=JSON.parse(this.storage.getItem(this.pointer("knownGraphs")));a!=null&&a(this)}};i.Lexicon.prototype.updateAfterWrite=function(){this.storage.setItem(this.pointer("oidCounter"),""+this.oidCounter)};i.Lexicon.prototype.pointer=function(a,b){a=="uriToOID"?a="uo":a=="OIDToUri"?a="ou":a=="literalToOID"?a="lo":a=="OIDToLiteral"?a="ok":a=="blankToOID"?a="bo":a=="OIDToBlank"&&(a=
"ob");return b==null?this.name+"_l_"+a:this.name+"_l_"+a+"_"+b};i.Lexicon.prototype.clear=function(){this.uriToOID={};this.OIDToUri={};this.literalToOID={};this.OIDToLiteral={};this.blankToOID={};this.OIDToBlank={};for(var a=this.storage.length,b=this.name+"_l_",c=[],d=0;d<a;d++){var e=this.storage.key(d);e.indexOf(b)==0&&c.push(e)}for(d=0;d<c.length;d++)this.storage.removeItem(c[d])};i.Lexicon.prototype.registerGraph=function(a){a!=this.defaultGraphOid&&(this.knownGraphs[a]=!0,this.storage.setItem(this.pointer("knownGraphs"),
JSON.stringify(this.knownGraphs)));return!0};i.Lexicon.prototype.registeredGraphs=function(a){var b=[],c;for(c in this.knownGraphs)a===!0?b.push(this.retrieve(c)):b.push(c);return b};i.Lexicon.prototype.registerUri=function(a){if(a===this.defaultGraphUri)return this.defaultGraphOid;else{if(this.uriToOID[a]==null){var b=this.storage.getItem(this.pointer("uriToOID",a));if(b==null){var b=this.oidCounter,c="u"+b;this.oidCounter++;this.uriToOID[a]=[b,0];this.OIDToUri[c]=a;this.storage.setItem(this.pointer("uriToOID",
a),b+":0");this.storage.setItem(this.pointer("OIDToUri",c),a)}else{var d=b.split(":"),b=parseInt(d[0]),c="u"+b,d=parseInt(d[1])+1;this.uriToOID[a]=[b,d];this.OIDToUri[c]=a;this.storage.setItem(this.pointer("uriToOID",a),b+":0")}}else c=this.uriToOID[a],b=c[0],d=c[1]+1,this.uriToOID[a]=[b,d],this.storage.setItem(this.pointer("uriToOID",a),b+":"+d);return b}};i.Lexicon.prototype.resolveUri=function(a){if(a===this.defaultGraphUri)return this.defaultGraphOid;else{var b=this.uriToOID[a];if(b!=null)return b[0];
else if(b=this.storage.getItem(this.pointer("uriToOID",a)),b==null)return-1;else{var c=b.split(":"),b=parseInt(c[0]),d="u"+b,c=parseInt(c[1]);this.uriToOID[a]=[b,c];this.OIDToUri[d]=a;return b}}};i.Lexicon.prototype.resolveUriCost=function(a){return a===this.defaultGraphUri?this.defaultGraphOid:(a=this.uriToOID[a],a!=null?a[1]:-1)};i.Lexicon.prototype.registerBlank=function(){var a=this.oidCounter;this.oidCounter++;a=""+a;this.storage.setItem(this.pointer("OIDToBlank",a),!0);this.OIDToBlank[a]=!0;
return a};i.Lexicon.prototype.resolveBlank=function(){var a=this.oidCounter;this.oidCounter++;return""+a};i.Lexicon.prototype.resolveBlankCost=function(){return 0};i.Lexicon.prototype.registerLiteral=function(a){if(this.literalToOID[a]==null){var b=this.storage.getItem(this.pointer("literalToOID",a));if(b==null){var b=this.oidCounter,c="l"+b;this.oidCounter++;this.literalToOID[a]=[b,0];this.OIDToLiteral[c]=a;this.storage.setItem(this.pointer("literalToOID",a),b+":0");this.storage.setItem(this.pointer("OIDToLiteral",
c),a)}else c=b.split(":"),b=parseInt(c[0]),c=parseInt(c[1])+1,this.literalToOID[a]=[b,c],this.storage.setItem(this.pointer("literalToOID",a),b+":"+c)}else c=this.literalToOID[a],b=c[0],c=c[1]+1,this.storage.setItem(this.pointer("literalToOID",a),b+":"+c),this.literalToOID[a]=[b,c];return b};i.Lexicon.prototype.resolveLiteral=function(a){var b=this.literalToOID[a];if(b!=null)return b[0];else{var c=this.storage.getItem(this.pointer("literalToOID",a));return c!=null?(b=c.split(":"),c=parseInt(b[0]),
b=parseInt(b[1]),this.literalToOID[a]=[c,b],this.OIDToLiteral["l"+c]=a,c):-1}};i.Lexicon.prototype.resolveLiteralCost=function(a){a=this.literalToOID[a];return a!=null?a[1]:0};i.Lexicon.prototype.parseLiteral=function(a){var b=a.lastIndexOf("@");if(b!=-1&&a[b-1]==='"'){var c=a.substring(1,b-1),a=a.substring(b+1,a.length);return{token:"literal",value:c,lang:a}}b=a.lastIndexOf("^^");if(b!=-1&&a[b-1]==='"'&&a[b+2]==="<"&&a[a.length-1]===">")return c=a.substring(1,b-1),a=a.substring(b+3,a.length-1),{token:"literal",
value:c,type:a};c=a.substring(1,a.length-1);return{token:"literal",value:c}};i.Lexicon.prototype.parseUri=function(a){return{token:"uri",value:a}};i.Lexicon.prototype.retrieve=function(a){var b;try{if(a===this.defaultGraphOid)return{token:"uri",value:this.defaultGraphUri,prefix:null,suffix:null,defaultGraph:!0};else{var c=this.OIDToUri["u"+a];if(c!=null)return this.parseUri(c);else{var d=this.OIDToLiteral["l"+a];if(d!=null)return this.parseLiteral(d);else{var e=this.OIDToBlank[""+a];if(e!=null)return{token:"blank",
value:"_:"+a};else if(c=this.storage.getItem(this.pointer("OIDToUri","u"+a)),c!=null){this.OIDToUri["u"+a]=c;b=this.storage.getItem(this.pointer("uriToOID",c));var f=b.split(":"),h=parseInt(f[1]);this.uriToOID[c]=[a,h];return this.parseUri(c)}else if(d=this.storage.getItem(this.pointer("OIDToLiteral","l"+a)),d!=null){this.OIDToLiteral["l"+a]=d;b=this.storage.getItem(this.pointer("literalToOID",d));var i=b.split(":"),a=parseInt(i[0]),h=parseInt(i[1]);this.literalToOID[d]=[a,h];return this.parseLiteral(d)}else if(e=
this.storage.getItem(this.pointer("OIDToBlank",""+a)),e!=null)return this.OIDToBlank[""+a]=!0,{token:"blank",value:"_:"+a};else throw"Null value for OID";}}}}catch(k){throw console.log("error in lexicon retrieving OID:"),console.log(a),k.message&&console.log(k.message),k.stack&&console.log(k.stack),Error("Unknown retrieving OID in lexicon:"+a);}};i.Lexicon.prototype.unregister=function(a,b){try{return this.unregisterTerm(a.subject.token,b.subject),this.unregisterTerm(a.predicate.token,b.predicate),
this.unregisterTerm(a.object.token,b.object),a.graph!=null&&this.unregisterTerm(a.graph.token,b.graph),!0}catch(c){return console.log("Error unregistering quad"),console.log(c.message),!1}};i.Lexicon.prototype.unregisterTerm=function(a,b){if(a==="uri"){if(b!=this.defaultGraphOid){var c="u"+b,d=this.OIDToUri[c],e=this.uriToOID[d],f=e[1];if(""+e[0]===""+b)f===0?(delete this.OIDToUri[c],delete this.uriToOID[d],delete this.knownGraphs[b]):this.uriToOID[d]=[b,f-1];else throw"Not matching OID : "+b+" vs "+
e[0];}}else if(a==="literal")if(this.oidCounter++,c="l"+b,d=this.OIDToLiteral[c],e=this.literalToOID[d],f=e[1],""+e[0]===""+b)f===0?(delete this.OIDToLiteral[c],delete this.literalToOID[d]):this.literalToOID[d]=[b,f-1];else throw"Not matching OID : "+b+" vs "+e[0];else a==="blank"&&delete this.OIDToBlank[""+b]};mg.open=function(a,b,c,d){if(!d)if(typeof c==="function")d=c,c={};else throw"Persistent storage requires a callback functon";c.persistent=!0;c.name=a;(c.overwrite=b)&&localStorage&&localStorage.clear&&
localStorage.clear();new mg(c,d)};mg.WebLocalStorageBTree=f;mg.WebLocalStorageLexicon=i})();
